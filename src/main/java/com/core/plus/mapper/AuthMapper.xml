<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="auth">

	<!-- 권한 리스트  -->
	<select id="Auth_List" parameterType="java.util.Map" resultType="com.core.plus.info.auth.vo.AuthVO">
		select *
		  from tb_auth
		 where act_yn = 'Y'
               order by auth_id desc
	</select>
	
	<!-- 권한 상세정보  -->
	<select id="authDetail" parameterType="String" resultType="com.core.plus.info.auth.vo.AuthVO">
		select auth_id
			 , auth_nm
			 , act_yn
    	  from tb_auth
    	 where auth_id = #{auth_id}
	           order by auth_id
	</select>
	
	<!-- 권한 추가 -->
	<insert id="authInsert" parameterType="com.core.plus.info.auth.vo.AuthVO">
		<selectKey keyProperty="auth_id" resultType="String" order="BEFORE">
         SELECT IF(SUBSTR(MAX(auth_id), 1, 3) = 'ATH', concat(SUBSTR(MAX(auth_id),1,3),LPAD(SUBSTR(MAX(auth_id),4,7)+1,7,'0')), concat('ATH','0000001')) auth_id 
         FROM tb_auth USE INDEX(PRIMARY)
		</selectKey>
		insert into tb_auth(auth_id
							  , auth_nm
		                   	  , act_yn
		                   	  , fin_mdfy_id)
<!-- 		               	      , crt_id -->
<!-- 		               	      , crt_dt -->
<!-- 		               	      , mdfy_id -->
<!-- 		               	      , mdfy_dt) -->
				        values(#{auth_id}
				        	  ,#{auth_nm}
				              ,#{act_yn}
				              ,#{fin_mdfy_id})
<!-- 				              ,#{crt_id} -->
<!-- 				              ,to_char(now(), 'YYYYMMDDHH24MISS'::text) -->
<!-- 				              ,#{mdfy_id} -->
<!-- 				              ,to_char(now(), 'YYYYMMDDHH24MISS'::text)) -->
	</insert>
	
	<!-- 권한 수정 -->
	<update id="authUpdate" parameterType="com.core.plus.info.auth.vo.AuthVO">
		update tb_auth
		   set auth_nm = #{auth_nm}
		     , act_yn = #{act_yn}
		     , fin_mdfy_id = #{fin_mdfy_id}
<!-- 		     , crt_dt = to_char(now(), 'YYYYMMDDHH24MISS'::text)  -->
<!-- 		     , mdfy_id = #{mdfy_id} -->
<!-- 		     , mdfy_dt = to_char(now(), 'YYYYMMDDHH24MISS'::text) -->
		where auth_id = #{auth_id}
	</update>
	
	<!-- 권한 삭제 -->
	<delete id="authDelete" parameterType="com.core.plus.info.auth.vo.AuthVO">
		delete from tb_auth
			  where auth_id=#{auth_id}
	</delete>
	
	<!-- 권한 체크 삭제 (여러개 삭제) -->
	<delete id="authChkDelete" parameterType="String">
		delete from tb_auth
			  where auth_id=#{auth_id}
	</delete>
	
	<!-- 사용자 권한 체크 삭제 (여러개 삭제) -->
	<delete id="authuserChkDelete" parameterType="String">
		delete from tb_user
			  where user_id=#{user_id}
	</delete>
	<delete id="authuserChkDelete1" parameterType="String">
		delete from tb_user_auth
			  where user_id=#{user_id}
			    and auth_id=#{auth_id}
	</delete>
	
	<!-- 사용자권한 리스트  -->
	<select id="authuserList" parameterType="java.util.Map" resultType="com.core.plus.info.auth.vo.AuthVO">
		select distinct u.user_id
             , u.user_nm
             , a.auth_nm
             , COALESCE(o.org_nm, '-') as org_id 
             , if(u.email_id is null or u.email_id = '','-',concat(u.email_id,'@',u.email_dm)) as email
             , concat(u.cell_ph1,'-',u.cell_ph2,'-',u.cell_ph3) as cell_ph
             , ua.fin_mdfy_id
             , date_format(ua.create_date,'%Y-%m-%d %H:%i') as create_date
         from tb_user u
            , tb_user_auth ua
            , tb_auth a
            , tb_org o left join tb_org o1 on o.org_id = o1.org_id
         where u.user_id = ua.user_id
           and ua.auth_id = a.auth_id
           and ua.auth_id = #{auth_id}
           and o.org_id = u.org_id
               order by u.user_id desc
	</select>
</mapper>