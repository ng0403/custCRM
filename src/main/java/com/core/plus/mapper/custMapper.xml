<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cust">
	<select id="custListTotalRow" resultType="int">
		SELECT count(*)
		FROM  tb_cust a left outer join tb_cust_phone p on a.cust_no = p.cust_no and p.primary_yn='Y'
		WHERE a.del_yn = 'N'
			<if test="cust_no !=null and cust_no !=''">
				and(a.cust_no like concat('%', #{cust_no}, '%') )
			</if> 
	   		<if test="cust_name !=null and cust_name !=''">
				and(a.cust_name like concat('%', #{cust_name}, '%') )
			</if>
			<if test="chart_no !=null and chart_no !=''">
				and(a.chart_no like concat('%', #{chart_no}, '%') )
			</if> 
	   		<if test="visit_cd !=null and visit_cd !=''">
				and(a.visit_cd like concat('%', #{visit_cd}, '%') )
			</if> 
	   		<if test="visit_dtl_cd !=null and visit_dtl_cd !=''">
				and(a.visit_dtl_cd like concat('%', #{visit_dtl_cd}, '%') )
			</if> 
	   		<if test="rec_per !=null and rec_per !=''">
				and(a.rec_per like concat('%', #{rec_per}, '%') )
			</if> 
			<if test="phone_no !=null and phone_no !=''">
				and( (concat(p.phone_area_no, p.phone_no) like concat('%', #{phone_no}, '%') ))
			</if>
	   		
	</select>
	
	<select id="custPhoneTotalRow" resultType="int">
		SELECT count(*) 
		FROM tb_cust_phone
		WHERE primary_yn = 'Y'
			
	</select>

	<select id="custList" resultType="com.core.plus.contact.cust.vo.CustVO" parameterType="java.util.Map">
		SELECT P.*
		FROM (
			select
		         a.cust_no
		         , date_format(a.create_date, '%Y-%m-%d %H:%i') as create_date
		         ,a.cust_name
		         ,case when(a.chart_no) is null then '' else (a.chart_no) end as chart_no
		         ,a.cust_id
		         ,a.cust_type
		         ,a.cust_rank
		         ,a.visit_cd
		         ,a.visit_dtl_cd
		         ,a.visit_cn
		         ,case when(rec_per) is null then '' else (rec_per) end as rec_per
		         ,case when (select phone_area_no from tb_cust_phone where primary_yn = 'Y' and cust_no = a.cust_no) is null then ''
		          else (select phone_area_no from tb_cust_phone where primary_yn = 'Y' and cust_no = a.cust_no) end as phone_area_no
		         ,case when (select phone_no from tb_cust_phone where primary_yn = 'Y' and cust_no = a.cust_no) is null then ''
		          else (select phone_no from tb_cust_phone where primary_yn = 'Y' and cust_no = a.cust_no) end as phone_no
		         ,(select zip_no from tb_cust_addr where primary_yn = 'Y' and cust_no = a.cust_no) as zip_no
		         ,case when (select main_address from tb_cust_addr where primary_yn = 'Y' and cust_no = a.cust_no) is null then ''
		          else (select main_address from tb_cust_addr where primary_yn = 'Y' and cust_no = a.cust_no) end as main_address
	      	from tb_cust a left outer join tb_cust_phone p on a.cust_no = p.cust_no and p.primary_yn ='Y'
	     	where a.del_yn = 'N'
	   		<if test="cust_no !=null and cust_no !=''">
				and(a.cust_no like concat('%', #{cust_no}, '%') )
			</if> 
	   		<if test="cust_name !=null and cust_name !=''">
				and(a.cust_name like concat('%', #{cust_name}, '%') )
			</if> 
			<if test="chart_no !=null and chart_no !=''">
				and(a.chart_no like concat('%', #{chart_no}, '%') )
			</if> 
	   		<if test="visit_cd !=null and visit_cd !=''">
				and(a.visit_cd like concat('%', #{visit_cd}, '%') )
			</if> 
	   		<if test="visit_dtl_cd !=null and visit_dtl_cd !=''">
				and(a.visit_dtl_cd like concat('%', #{visit_dtl_cd}, '%') )
			</if> 
	   		<if test="rec_per !=null and rec_per !=''">
				and(a.rec_per like concat('%', #{rec_per}, '%') )
			</if> 
	   		<if test="phone_no !=null and phone_no !=''">
				and (concat(p.phone_area_no, p.phone_no) like concat('%', #{phone_no}, '%') )
			</if> 
		order by a.update_date desc
		) P
		LIMIT #{page.limitStartNum}, #{page.pageSize}
	</select>
	
	<!-- 엑셀 출력 -->
	<select id="custExcelExport" parameterType="string" resultType="map">
		SELECT X.*
		FROM ( 
			select
		         a.cust_no
		            , date_format(a.create_date, '%Y-%m-%d %H:%i') as create_date
		         ,a.cust_name
		         ,case when(a.chart_no) is null then '' else (a.chart_no) end as chart_no
		         ,a.cust_id
		         ,(select code_name from tb_code code where code_no = '1001' and code.code = a.visit_cd ) as visit_cd
		         ,(select code_name from tb_code code where code_no = '1002' and code.code = a.visit_cd ) as visit_dtl_cd
		         ,a.visit_cn
		         ,case when(rec_per) is null then '' else (rec_per) end as rec_per
		         ,case when (select phone_area_no from tb_cust_phone where primary_yn = 'Y' and cust_no = a.cust_no) is null then ''
		          else (select phone_area_no from tb_cust_phone where primary_yn = 'Y' and cust_no = a.cust_no) end as phone_area_no
		         ,case when (select phone_no from tb_cust_phone where primary_yn = 'Y' and cust_no = a.cust_no) is null then ''
		          else (select phone_no from tb_cust_phone where primary_yn = 'Y' and cust_no = a.cust_no) end as phone_no
		         ,(select zip_no from tb_cust_addr where primary_yn = 'Y' and cust_no = a.cust_no) as zip_no
		         ,case when (select main_address from tb_cust_addr where primary_yn = 'Y' and cust_no = a.cust_no) is null then ''
		          else (select main_address from tb_cust_addr where primary_yn = 'Y' and cust_no = a.cust_no) end as main_address
		      	from tb_cust a
		     	where a.del_yn = 'N'
		   		<if test="cust_no !=null and cust_no !=''">
					and(a.cust_no like concat('%', #{cust_no}, '%') )
				</if> 
		   		<if test="cust_name !=null and cust_name !=''">
					and(a.cust_name like concat('%', #{cust_name}, '%') )
				</if>
				<if test="chart_no !=null and chart_no !=''">
					and(a.chart_no like concat('%', #{chart_no}, '%') )
				</if>
		   		<if test="visit_cd !=null and visit_cd !=''">
					and(a.visit_cd like concat('%', #{visit_cd}, '%') )
				</if> 
		   		<if test="visit_dtl_cd !=null and visit_dtl_cd !=''">
					and(a.visit_dtl_cd like concat('%', #{visit_dtl_cd}, '%') )
				</if> 
		   		<if test="rec_per !=null and rec_per !=''">
					and(a.rec_per like concat('%', #{rec_per}, '%') )
				</if> 
		   		<if test="phone_no !=null and phone_no !=''">
					and(c.phone_no like concat('%', #{phone_no}, '%') )
				</if> 
			order by a.update_date desc
		)X
	</select>
	
	<select id="custDetailList" resultType="com.core.plus.contact.cust.vo.CustVO" parameterType="String">
		select
			a.cust_no
			,a.create_date
			,a.cust_name
			,a.resident_no
			,a.chart_no
			,a.cust_id
			,a.cust_rank
			,a.cust_type
			,a.visit_cd
			,a.visit_dtl_cd
			,a.visit_cn
			,a.rec_per
			,a.remark_cn
		from tb_cust a
		where
			a.cust_no = #{cust_no}
	</select>
	
	<!-- 중복체크 -->
	<select id="custDuplicate" parameterType="com.core.plus.contact.cust.vo.CustVO" resultType="int">
		SELECT count(*)
		FROM 
			tb_cust
		WHERE
			cust_name = #{cust_name} AND resident_no = #{resident_no}
	</select>
	
	<insert id="custInsert" parameterType="com.core.plus.contact.cust.vo.CustVO">
		<selectKey keyProperty="cust_no" resultType="String" order="BEFORE">
			SELECT 
                  IF(SUBSTR(MAX(cust_no), 1, 10) = DATE_FORMAT(now(), '%Y%m%d%H')
                     , MAX(cust_no)+1
                     , concat(DATE_FORMAT(now(), '%Y%m%d%H'),'00001')) cust_no
                  FROM tb_cust USE INDEX(PRIMARY)
		</selectKey>
		insert into tb_cust (
							cust_no
							,cust_name
							,resident_no
							,chart_no
							,cust_id
							,cust_type
							,cust_rank
							,visit_cd
							,visit_dtl_cd
							,visit_cn
							,cust_rank
							,cust_type
							,rec_per
							,remark_cn
		)
		values(
			#{cust_no}
           	,#{cust_name}
           	,#{resident_no}
           	,#{chart_no}
           	,#{cust_id}
           	,#{cust_type}
           	,#{cust_rank}
           	,#{visit_cd}
           	,#{visit_dtl_cd}
           	,#{visit_cn}
           	,#{cust_rank}
           	,#{cust_type}
           	,#{rec_per}
           	,#{remark_cn}
		)
<!-- 		<selectKey keyProperty="cust_key" resultType="String" order="AFTER"> -->
<!-- 			SELECT  -->
<!--                   MAX(cust_no) -->
<!--             FROM tb_cust USE INDEX(PRIMARY) -->
<!-- 		</selectKey> -->
	</insert>
	
	<update id="custUpdate" parameterType="com.core.plus.contact.cust.vo.CustVO">
		update tb_cust
		set
			cust_name = #{cust_name}
			,chart_no = #{chart_no}
			,cust_id = #{cust_id}
			,cust_type = #{cust_type}
			,cust_rank = #{cust_rank}
			,visit_cd = #{visit_cd}
			,visit_dtl_cd = #{visit_dtl_cd}
			,visit_cn = #{visit_cn}
			,rec_per = #{rec_per}
			,remark_cn = #{remark_cn}
		where cust_no = #{cust_no}
	</update>
	
	<update id="custDelete" parameterType="com.core.plus.contact.cust.vo.CustVO">
		update tb_cust
		set
			del_yn = 'Y'
		where cust_no = #{cust_no}
	</update>
	
	<!-- import Test -->
	<insert id="custExcelInsert" parameterType="com.core.plus.contact.cust.vo.CustVO">
		<selectKey keyProperty="cust_no" resultType="String" order="BEFORE">
			SELECT 
                  IF(SUBSTR(MAX(cust_no), 1, 10) = DATE_FORMAT(now(), '%Y%m%d%H')
                     , MAX(cust_no)+1
                     , concat(DATE_FORMAT(now(), '%Y%m%d%H'),'00001')) cust_no
                  FROM tb_cust USE INDEX(PRIMARY)
		</selectKey>
		insert into tb_cust 
			(cust_no, cust_name, resident_no, chart_no, cust_id, visit_cd, visit_dtl_cd, visit_cn, cust_rank, cust_type, rec_per, remark_cn)
		values 
			(#{cust_no}, #{cust_name}, #{resident_no}, #{chart_no}, #{cust_id}, #{visit_cd}, 
			 #{visit_dtl_cd}, #{visit_cn}, #{cust_rank}, #{cust_type}, #{rec_per}, #{remark_cn})
	</insert>
	
	<update id="custExcelUpdate" parameterType="com.core.plus.contact.cust.vo.CustVO">
		UPDATE tb_cust
		SET
			chart_no = #{chart_no}
			,cust_id = #{cust_id}
			,visit_cd = #{visit_cd}
			,visit_dtl_cd = #{visit_dtl_cd}
			,visit_cn = #{visit_cn}
			,rec_per = #{rec_per}
			,remark_cn = #{remark_cn}
		WHERE 
			cust_name = #{cust_name} AND resident_no = #{resident_no}
	</update>
	
</mapper>